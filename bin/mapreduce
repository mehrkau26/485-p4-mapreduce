#!/bin/bash
#mapreduce

# Sanity check command line options
usage() {
  echo "Usage: $0 (start|status|stop|restart)"
}

#LOG_DIR ="var/log"
#MANAGER_LOG="$LOG_DIR/manager.log"
#WORKER1_LOG="$LOG_DIR/worker-6001.log"
#WORKER2_LOG="$OG_DIR/worker-6002.log"

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

is_manager_running() {
    pgrep -f mapreduce-manager &> /dev/null
}

is_worker_running() {
    pgrep -f mapreduce-worker &> /dev/null
}

start_server() {
    if is_manager_running || is_worker_running; then
    echo "Error: mapreduce-manager is already running"
        exit 1
    fi

    echo "starting mapreduce ..."
    mkdir -p var/log
    rm -f var/log/manager.log var/log/worker-6002.log var/log/worker-6001.log
    mapreduce-manager --host localhost --port 6000 --logfile var/log/manager.log &
    sleep 2
    mapreduce-worker --host localhost --port 6001 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6001.log &
    mapreduce-worker --host localhost --port 6002 --manager-host localhost --manager-port 6000 --logfile var/log/worker-6002.log &
}

stop_server() {
    echo "stopping mapreduce ..."
    mapreduce-submit --shutdown --host localhost --port 6000 || true
    sleep 2

    if is_manager_running; then
        echo "killing mapreduce manager ..."
        pkill -f mapreduce-manager || true
    fi
    if is_worker_running; then
        echo "killing mapreduce worker ..."
        pkill -f mapreduce-worker || true
    fi
}


server_status() {
    if is_manager_running; then
        echo "manager running"
    else
        echo "manager not running"
    fi

    if is_worker_running; then
        echo "workers running"
    else
        echo "workers not running"
    fi

    if is_manager_running && is_worker_running; then
        exit 0
    else
        exit 1
    fi
}

restart_server() {
    stop_server
    start_server
}
# Parse argument.  $1 is the first argument
case $1 in
  "start")
    start_server
    ;;

  "stop")
    stop_server
    ;;

  "status")
    server_status
    ;;

  "restart")
    restart_server
    ;;
  *)
    usage
    exit 1
    ;;
esac
